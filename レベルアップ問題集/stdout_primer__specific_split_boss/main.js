// 大きな数値Nが入力されます。 位の小さい方から 3 けたごとにカンマ区切りで出力してください。
// ただし、Nのけた数は 3 の倍数とは限りません。

// ▼　下記解答欄にコードを記入してみよう

// 入力される値
// N

// 入力値最終行の末尾に改行が１つ入ります。
// 文字列は標準入力から渡されます。 標準入力からの値取得方法はこちらをご確認ください
// 期待する出力
// 答えの数値を出力してください。


// M


// 末尾に改行を入れ、余計な文字、空行を含んではいけません。
// 条件
// すべてのテストケースにおいて、以下の条件をみたします。

// * Nは自然数
// * Nは 0 以上 10 ^ 1,000 以下

// 入力例1
// 123456789

// 出力例1
// 123,456,789




// Node.js で実行する想定

const fs = require('fs');
// 1. 標準入力を読み込んで不要な改行を除去
const N = fs.readFileSync(0, 'utf-8').trim();

// 2. 結果をためる配列と、桁カウント用の変数を用意
const result = [];
let count = 0;

// 3. 文字列 N の末尾（最下位桁）から先頭（最上位桁）へ逆順にループ
for (let i = N.length - 1; i >= 0; i--) {
  result.push(N[i]);    // 3-1. ひと桁を result に追加
  count++;              // 3-2. カウンタを増やす

  // 3-3. カウンタが 3 の倍数かつ、まだ先頭に到達していなければカンマを追加
  if (count % 3 === 0 && i !== 0) {
    result.push(',');
  }
}

// 4. 逆順にためた配列を正しい向きに戻して文字列化
const formatted = result.reverse().join('');

// 5. 出力（console.log は末尾に改行を付けてくれる）
console.log(formatted);
